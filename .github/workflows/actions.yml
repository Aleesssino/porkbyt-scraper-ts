name: Scraper Workflow

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/6 * * * *" # Runs every 6 minutes

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Cache Puppeteer Browser
        uses: actions/cache@v3
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-puppeteer-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-puppeteer-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gconf-service \
            libasound2 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgbm1 \
            libgcc1 \
            libgconf-2-4 \
            libgdk-pixbuf2.0-0 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            ca-certificates \
            fonts-liberation \
            libnss3 \
            lsb-release \
            xdg-utils \
            wget

      - name: Install dependencies
        run: npm install

      - name: Compile TypeScript
        run: npm run build

      - name: Run scraper
        env:
          BR_USERNAME: ${{ secrets.BR_USERNAME }}
          BR_PASSWORD: ${{ secrets.BR_PASSWORD }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: node dist/index.js

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --exit-code data.json; then
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Set up Git configuration
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Debugging Git status
        run: git status

      - name: Commit changes
        if: env.changes == 'true'
        run: |
          git add data.json
          git commit -m 'Update data.json'
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
